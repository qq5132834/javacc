/**
* JTB file
*/

options {
  JDK_VERSION = "1.5";
}

PARSER_BEGIN(eg3) 
package jtb;

import jtb.syntaxtree.*;
import jtb.visitor.*;

public class eg3 {
  public static void main(String args[]) {
    System.out.println("Reading from standard input...");
    System.out.print("Enter an expression like \"1+(2+3)*var;\" :");
    new eg3(System.in);
    try {
      	Start start = eg3.Start();
      	Visitor v = new MyVisitor();
      	start.accept(v);
    } catch (Exception e) {
      System.out.println("Oops.");
      System.out.println(e.getMessage());
    }
  }
}
class MyVisitor extends DepthFirstVisitor {
 public void visit(NodeToken n) { 
  System.out.println("visit "+n.tokenImage);
 }
}
PARSER_END(eg3)

SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
| <"//" (~["\n","\r"])* ("\n"|"\r"|"\r\n")>
| <"/*" (~["*"])* "*" (~["/"] (~["*"])* "*")* "/">
}
TOKEN : /* LITERALS */
{
  < INTEGER_LITERAL:
        <DECIMAL_LITERAL> (["l","L"])?
      | <HEX_LITERAL> (["l","L"])?
      | <OCTAL_LITERAL> (["l","L"])?
  >
|  < #DECIMAL_LITERAL: ["1"-"9"] (["0"-"9"])* >
|  < #HEX_LITERAL: "0" ["x","X"] (["0"-"9","a"-"f","A"-"F"])+ >
|  < #OCTAL_LITERAL: "0" (["0"-"7"])* >
}
TOKEN : /* IDENTIFIERS */
{
  < IDENTIFIER: <LETTER> (<LETTER>|<DIGIT>)* >
|  < #LETTER: ["_","a"-"z","A"-"Z"] >
|  < #DIGIT: ["0"-"9"] >
}
void Start():{}
{
  Expression() ";"
}
void Expression():{ } 
{
  AdditiveExpression()
}
void AdditiveExpression():{}
{
  MultiplicativeExpression() ( ( "+" | "-" ) MultiplicativeExpression() )*
}
void MultiplicativeExpression():{}
{
  UnaryExpression() ( ( "*" | "/" | "%" ) UnaryExpression() )*
}
void UnaryExpression():{}
{
  "(" Expression() ")" | Identifier() | MyInteger()
}
void Identifier():{}
{
  <IDENTIFIER>
}
void MyInteger():{}
{
  <INTEGER_LITERAL>
}
